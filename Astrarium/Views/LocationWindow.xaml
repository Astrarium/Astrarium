<Window x:Class="Astrarium.Views.LocationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:c="clr-namespace:Astrarium.Types.Controls;assembly=Astrarium.Types"
        xmlns:t="clr-namespace:Astrarium.Types;assembly=Astrarium.Types"
        xmlns:s="clr-namespace:Astrarium.Types.Themes;assembly=Astrarium.Types"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="{t:Text LocationWindow.Title}"
        ShowInTaskbar="False" 
        WindowStartupLocation="CenterOwner"
        s:WindowProperties.MinButtonVisible="Collapsed"
        Style="{StaticResource {x:Type Window}}"
        MinWidth="800"
        MinHeight="400"
        Height="600" 
        Width="1000">

    <Window.Resources>
        <Style x:Key="MenuItemHeader" TargetType="{x:Type MenuItem}">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="BorderBrush" Value="{StaticResource BrushControlBackground}" />
            <Setter Property="Foreground" Value="{StaticResource BrushControlLightBackground}" />
            <Setter Property="Background" Value="{StaticResource BrushControlDarkBackground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <StackPanel Orientation="Vertical" Height="Auto">
                            <c:BorderFix Height="2" Margin="-1" Background="{TemplateBinding BorderBrush}" />
                            <TextBlock FontSize="12" Padding="30 4 12 4" Text="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    
    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Margin="2 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox x:Name="txtSearchString" Margin="0 4 0 4" Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding EnterCommand}" Key="Return" />
                        <KeyBinding Command="{Binding PrevSearchResultCommand}" Key="Up" />
                        <KeyBinding Command="{Binding NextSearchResultCommand}" Key="Down" />
                    </TextBox.InputBindings>
                </TextBox>
                <TextBlock IsHitTestVisible="False" Text="{t:Text LocationWindow.SearchHint}" Height="26" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="8 4 4 4">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="{StaticResource BrushControlLightBackground}"/>
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Setter Property="FontStyle" Value="Italic" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=txtSearchString}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Button Grid.Column="1" Margin="3 3 1 3" Width="24" Height="24" VerticalContentAlignment="Center" Command="{Binding EndSearchModeCommand}" Visibility="{Binding SearchMode, Converter={s:BoolToVisibilityConverter}}">
                    <Button.Content>
                        <Rectangle Margin="2" Width="8" Height="8">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource ColorForeground}" />
                            </Rectangle.Fill>
                            <Rectangle.OpacityMask>
                                <ImageBrush AlignmentX="Left" AlignmentY="Top" Stretch="UniformToFill">
                                    <ImageBrush.ImageSource>
                                        <DrawingImage>
                                            <DrawingImage.Drawing>
                                                <DrawingGroup ClipGeometry="M0,0 V100 H100 V0 H0 Z">
                                                    <GeometryDrawing Brush="White" Geometry="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z " />
                                                </DrawingGroup>
                                            </DrawingImage.Drawing>
                                        </DrawingImage>
                                    </ImageBrush.ImageSource>
                                </ImageBrush>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button.Content>
                </Button>
            </Grid>

            <c:BindableListView Grid.Row="1" 
                Margin="0 4 0 4"
                x:Name="lstResults"
                VerticalAlignment="Stretch"
                                MinHeight="0"
                ItemsSource="{Binding Path=SearchResults, Mode=OneWay}"
                SelectedItem="{Binding SelectedItem}"                            
                MouseDoubleClickCommand="{Binding SelectLocationCommand}"
                SelectionMode="Single"
                Visibility="{Binding SearchMode, Converter={s:BoolToVisibilityConverter}}"
                VerticalContentAlignment="Top"
                IsSynchronizedWithCurrentItem="True"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                ScrollViewer.CanContentScroll="False">

                <ListView.Resources>
                    <Style TargetType="{x:Type c:BindableListView}" BasedOn="{StaticResource ListViewWithGridViewStyle}">
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemGridViewStyle}" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>

                <ListView.View>
                    <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                        <GridView.Columns>
                            <GridViewColumn Header="{t:Text LocationWindow.Table.Country}" Width="55" DisplayMemberBinding="{Binding Path=Country}" />
                            <GridViewColumn Header="{t:Text LocationWindow.Table.Name}" Width="200" DisplayMemberBinding="{Binding Path=Name}" />
                            <GridViewColumn Header="{t:Text LocationWindow.Table.OtherNames}" Width="220" DisplayMemberBinding="{Binding Path=Names, Converter={s:StringCollectionToStringConverter}}" />
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </c:BindableListView>

            <c:MapControl
                x:Name="Map"
                Grid.Row="1"
                Grid.RowSpan="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Visibility="{Binding SearchMode, Converter={s:InverseBoolToVisibilityConverter}}"
                BackColor="{Binding MapThumbnailBackColor}"                       
                TileServer="{Binding TileServer, Mode=TwoWay}"
                OverlayTileServer="{Binding OverlayTileServer, Mode=TwoWay}"
                OverlayOpacity="{Binding OverlayOpacity, Mode=TwoWay}"
                CacheFolder="{Binding CacheFolder, Mode=OneTime}"
                Markers="{Binding Markers}"
                Center="{Binding MapCenter, Mode=TwoWay}"
                ZoomLevel="{Binding MapZoomLevel, Mode=TwoWay}"
                ThumbnailBackColor="{Binding MapThumbnailBackColor}"
                ThumbnailForeColor="{Binding MapThumbnailForeColor}"
                IsMouseOverMap="{Binding IsMouseOverMap, Mode=OneWayToSource}"
                TileImageAttributes="{Binding TileImageAttributes}"
                OnDoubleClick="{Binding OnMouseDoubleClickCommand}"
                OnMarkerDraw="{Binding OnDrawMarkerCommand}"
                OnRightClick="{Binding OnMouseRightClickCommand}"
                Mouse="{Binding MapMouse, Mode=OneWayToSource}" 
                Margin="0,0,0,25">
                <c:MapControl.ContextMenu>
                    <ContextMenu Opened="ContextMenu_Opened">
                        <MenuItem Style="{StaticResource MenuItemHeader}" Header="{Binding MapMouseString}" IsEnabled="False" />
                        <MenuItem Header="{t:Text LocationWindow.Select}" Command="{Binding SelectCurrentMousePositionCommand}" />
                        <MenuItem Style="{StaticResource MenuItemHeader}" Visibility="{Binding NearestLocation, Converter={s:NotNullToVisibilityConverter}}" Header="{Binding NearestLocation.Name}" />
                        <MenuItem Header="{t:Text LocationWindow.Select}" Command="{Binding SelectNearestLocationCommand}" Visibility="{Binding NearestLocation, Converter={s:NotNullToVisibilityConverter}}" />
                    </ContextMenu>
                </c:MapControl.ContextMenu>
            </c:MapControl>

            <TextBlock Grid.Row="1" Name="lstEmpty" 
                Text="{t:Text LocationWindow.Table.NothingFound}" 
                IsEnabled="False"
                Visibility="{Binding NoResults, Converter={s:BoolToVisibilityConverter}}" 
                TextAlignment="Center" 
                VerticalAlignment="Center" />

            <Grid Margin="2" Height="20" Grid.Row="2" Visibility="{Binding SearchMode, Converter={s:InverseBoolToVisibilityConverter}}" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" MinWidth="200" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <TextBlock Text="Map:" Margin="2 0 4 0" />
                    <ComboBox Padding="4 -1" Margin="2 0" Width="140" Height="18" ItemsSource="{Binding TileServers, Mode=OneTime}" DisplayMemberPath="Name" SelectedItem="{Binding TileServer}" />
                    <TextBlock Text="Light Pollution Overlay:" Margin="4 0 4 0" />
                    
                    <c:NullItemSelectorAdapter NullItem="None" ItemsSource="{Binding OverlayTileServers, Mode=OneTime}">
                        <ComboBox Padding="4 -1" Margin="2 0" Width="100" Height="18" SelectedItem="{Binding OverlayTileServer}" />
                    </c:NullItemSelectorAdapter>

                    <ComboBox Padding="4 -1" Margin="2 0" Width="60" Height="18" ItemsSource="{Binding OverlayOpacities, Mode=OneTime}" SelectedItem="{Binding OverlayOpacity}" Visibility="{Binding OverlayTileServer, Converter={s:NotNullToVisibilityConverter}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding StringFormat='P0'}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                </StackPanel>

                <Slider Padding="16 0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="1" Orientation="Horizontal" 
                    Minimum="{Binding ElementName=Map, Path=MinZoomLevel, Mode=OneWay}"
                    Maximum="{Binding ElementName=Map, Path=MaxZoomLevel, Mode=OneWay}"
                    Value="{Binding ElementName=Map, Path=ZoomLevel, Mode=TwoWay}" />
                <c:HtmlTextBlock Grid.Column="3" Foreground="{StaticResource BrushControlLightBackground}" VerticalAlignment="Center" HorizontalAlignment="Right" Padding="2 0 4 0" FontSize="12" FormattedText="{Binding TileServer.AttributionText, FallbackValue='AttributionText'}" />
            </Grid>
        </Grid>

        <Grid Grid.Column="1" Width="300">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Orientation="Vertical">
                <GroupBox Header="{t:Text LocationWindow.Latitude}" Margin="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26" />
                            <RowDefinition Height="26" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Content="{t:Text LocationWindow.Degrees}" />
                        <Label Grid.Column="1" Content="{t:Text LocationWindow.Minutes}" />
                        <Label Grid.Column="2" Content="{t:Text LocationWindow.Seconds}" />
                        <RadioButton Grid.Column="3" VerticalAlignment="Center" Margin="4" IsChecked="{Binding LatitudeNorth}" Content="{t:Text LocationWindow.North}" />

                        <c:NumericUpDown Margin="3 0" Grid.Column="0" Grid.Row="1" Minimum="0" Maximum="89" Value="{Binding LatitudeDegrees, Converter={s:NumericConverter}}" DecimalPlaces="0" />
                        <c:NumericUpDown Margin="3 0" Grid.Column="1" Grid.Row="1" Minimum="0" Maximum="59" Value="{Binding LatitudeMinutes, Converter={s:NumericConverter}}" DecimalPlaces="0" />
                        <c:NumericUpDown Margin="3 0" Grid.Column="2" Grid.Row="1" Minimum="0" Maximum="59" Value="{Binding LatitudeSeconds, Converter={s:NumericConverter}}" DecimalPlaces="0" />
                        <RadioButton Grid.Column="3" Grid.Row="1" VerticalAlignment="Center" Margin="4" IsChecked="{Binding LatitudeSouth}" Content="{t:Text LocationWindow.South}" />

                    </Grid>
                </GroupBox>

                <GroupBox Header="{t:Text LocationWindow.Longitude}" Margin="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26" />
                            <RowDefinition Height="26" />
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Content="{t:Text LocationWindow.Degrees}" />
                        <Label Grid.Column="1" Content="{t:Text LocationWindow.Minutes}" />
                        <Label Grid.Column="2" Content="{t:Text LocationWindow.Seconds}" />
                        <RadioButton Grid.Column="3" VerticalAlignment="Center" Margin="4" IsChecked="{Binding LongitudeEast}" Content="{t:Text LocationWindow.East}" />

                        <c:NumericUpDown Margin="3 0" Grid.Column="0" Grid.Row="1" Minimum="0" Maximum="179" Value="{Binding LongitudeDegrees, Converter={s:NumericConverter}}" DecimalPlaces="0" />
                        <c:NumericUpDown Margin="3 0" Grid.Column="1" Grid.Row="1" Minimum="0" Maximum="59" Value="{Binding LongitudeMinutes, Converter={s:NumericConverter}}" DecimalPlaces="0" />
                        <c:NumericUpDown Margin="3 0" Grid.Column="2" Grid.Row="1" Minimum="0" Maximum="59" Value="{Binding LongitudeSeconds, Converter={s:NumericConverter}}" DecimalPlaces="0" />
                        <RadioButton Grid.Column="3" Grid.Row="1" VerticalAlignment="Center" Margin="4" IsChecked="{Binding LongitudeWest}" Content="{t:Text LocationWindow.West}" />

                    </Grid>
                </GroupBox>

                <GroupBox Header="{t:Text LocationWindow.LocationName}" Margin="4">
                    <TextBox Margin="4 10 4 10" Text="{Binding LocationName}"></TextBox>
                </GroupBox>

                <GroupBox Header="{t:Text LocationWindow.Elevation}" Margin="4">
                    <c:NumericUpDown Step="1" DecimalPlaces="0" Minimum="-430" Maximum="8848" Margin="4 10 4 10" Value="{Binding Elevation}" />
                </GroupBox>

                <GroupBox Header="{t:Text LocationWindow.UTCOffset}" Margin="4">
                    <ComboBox Margin="4 10 4 10" ItemsSource="{Binding TimeZones}" SelectedItem="{Binding UtcOffset}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={s:TimeZoneConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </GroupBox>
            </StackPanel>
            

            <StackPanel Margin="8" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2">
                <Button MinWidth="80" Margin="0 0 4 0" Command="{Binding OkCommand}"  Content="{t:Text Select}" />
                <Button MinWidth="80" Command="{Binding CancelCommand}" Content="{t:Text Close}" />
            </StackPanel>

        </Grid>

    </Grid>
</Window>
