<Window x:Class="Astrarium.Views.SearchWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="clr-namespace:Astrarium.Types.Themes;assembly=Astrarium.Types"
    xmlns:t="clr-namespace:Astrarium.Types;assembly=Astrarium.Types"
    mc:Ignorable="d"
    Title="{t:Text SearchWindow.Title}" 
    Width="600" Height="600"
    MinWidth="300" MinHeight="300"
    Style="{StaticResource {x:Type Window}}"
    ShowInTaskbar="False"     
    WindowStartupLocation="CenterOwner">

    <Grid Margin="4 4 4 4">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0"
            Text="{t:Text SearchWindow.EmptySearchString}" 
            IsEnabled="False"
            Visibility="{Binding EmptySearchString, Converter={s:BoolToVisibilityConverter}}" 
            TextAlignment="Center" 
            VerticalAlignment="Center" />

        <TextBlock Grid.Row="0" 
            Text="{t:Text SearchWindow.NothingFound}" 
            IsEnabled="False"
            Visibility="{Binding NothingFound, Converter={s:BoolToVisibilityConverter}}" 
            TextAlignment="Center" 
            VerticalAlignment="Center" />

        <ListView Grid.Row="0"     
            x:Name="lstResults"
            ItemsSource="{Binding Path=SearchResults, Mode=OneWay}"
            DisplayMemberPath="Name"
            SelectionMode="Single" 
            SelectedItem="{Binding SelectedItem}"
            Visibility="{Binding SelectedItem, Converter={s:NotNullToVisibilityConverter}}"
            VerticalContentAlignment="Top"
            IsSynchronizedWithCurrentItem="True"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            ScrollViewer.CanContentScroll="False">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="true">
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle x:Name="Icon" Margin="2" Width="16" Height="16" ToolTip="{Binding Body, Converter={s:CelestialObjectTypeDescriptionConverter}}">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="{DynamicResource ColorControlLightBackground}" />
                                            </Rectangle.Fill>
                                            <Rectangle.OpacityMask>
                                                <ImageBrush ImageSource="{Binding Body, Converter={s:CelestialObjectToIconConverter}}" Stretch="Uniform" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Padding="4 0 0 0" Text="{Binding Name}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource BrushSelection}"/>
                                        <Setter Property="Foreground" Value="{StaticResource BrushSelectionForeground}"/>
                                        <Setter Property="Fill" TargetName="Icon" Value="{StaticResource BrushSelectionForeground}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="IsSelected" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource BrushControlDarkBackground}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource BrushControlLightBackground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />
                    <EventSetter Event="PreviewKeyDown" Handler="Controls_PreviewKeyDown" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <TextBox x:Name="txtSearchString" Grid.Row="1" Margin="0 4 0 4" Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                    <EventSetter Event="PreviewKeyDown" Handler="Controls_PreviewKeyDown" />
                </Style>
            </TextBox.Style>
        </TextBox>
        <StackPanel Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Button MinWidth="80" Click="SelectButton_Click" Margin="0 0 4 0" IsEnabled="{Binding SelectedItem, Converter={s:NotNullToBoolConverter}, Mode=OneWay}" Content="{t:Text Select}" />
            <Button MinWidth="80" Click="CloseButton_Click" Content="{t:Text Close}" />
        </StackPanel>

    </Grid>
</Window>
