<Window x:Class="Astrarium.Plugins.Planner.Views.PlanningListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:Astrarium.Plugins.Planner.Views" 
        xmlns:s="clr-namespace:Astrarium.Types.Themes;assembly=Astrarium.Types"
        xmlns:c="clr-namespace:Astrarium.Types.Controls;assembly=Astrarium.Types"
        xmlns:controls="clr-namespace:Astrarium.Plugins.Planner.Controls"
        mc:Ignorable="d"
        Title="Observation Plan"
        Style="{StaticResource {x:Type Window}}"
        WindowStartupLocation="CenterScreen"
        MinHeight="300" MinWidth="400"
        Height="500" Width="600">

    <Window.Resources>
        <ContextMenu x:Key="RowMenu" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
            <MenuItem Header="Show object" Command="{Binding ShowObjectCommand}" CommandParameter="{Binding SelectedTableItem.CelestialObject}" IsEnabled="{Binding IsSigleTableItemSelected}" />
            <Separator />
            <MenuItem Header="Go to BEGIN of observation" Command="{Binding SetTimeCommand}" CommandParameter="{Binding SelectedTableItem[Observation.Begin]}" IsEnabled="{Binding IsGoToObservationBeginEnabled}" />
            <MenuItem Header="Go to BEST observation time" Command="{Binding SetTimeCommand}" CommandParameter="{Binding SelectedTableItem[Observation.Best]}"  IsEnabled="{Binding IsGoToObservationBestEnabled}" />
            <MenuItem Header="Go to END of observation" Command="{Binding SetTimeCommand}" CommandParameter="{Binding SelectedTableItem[Observation.End]}"  IsEnabled="{Binding IsGoToObservationEndEnabled}" />
            <Separator />
            <MenuItem Header="Add object by name..." Command="{Binding AddObjectCommand}" InputGestureText="Ctrl+F" />
            <MenuItem Header="Add objects by criteria..." />
            <Separator />
            <MenuItem Header="Remove selected item(s)" Command="{Binding RemoveSelectedItemsCommand}" IsEnabled="{Binding SelectedTableItem, Converter={s:NotNullToBoolConverter}}" InputGestureText="Delete" />
        </ContextMenu>
        <Style x:Key="DefaultRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
        </Style>
        <Style x:Key="DateLinkStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Height" Value="10" />
            <Setter Property="FontFamily" Value="Lucida Console" />
            <Setter Property="FontSize" Value="12" />
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="F" Command="{Binding AddObjectCommand}" />
    </Window.InputBindings>

    <Grid Margin="0 4">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <!--<TextBlock Margin="4 0" Text="Plan title" FontSize="22" />-->

            <controls:DirectionChart 
                Height="140"
                Width="140"
                Margin="8"
                SnapsToDevicePixels="True"
                FromTime="{Binding FromTime, Mode=OneWay}"
                ToTime="{Binding ToTime, Mode=OneWay}"
                SunCoordinates="{Binding SunCoordinates}" 
                BodyCoordinates="{Binding BodyCoordinates}"
                SiderealTime="{Binding SiderealTime}"
                GeoLocation="{Binding GeoLocation}"
                Grid.Column="1" HorizontalAlignment="Stretch" Background="#202020" />

            <controls:VisibilityChart 
                Width="400"
                Height="140"
                Margin="8"
                SnapsToDevicePixels="True"
                FromTime="{Binding FromTime, Mode=OneWay}"
                ToTime="{Binding ToTime, Mode=OneWay}"
                SunCoordinates="{Binding SunCoordinates}" 
                BodyCoordinates="{Binding BodyCoordinates}"
                SiderealTime="{Binding SiderealTime}"
                GeoLocation="{Binding GeoLocation}"
                Grid.Column="2" HorizontalAlignment="Stretch" Background="#202020" />
        </Grid>

        <Grid Margin="1" Grid.Row="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            
            <Button Grid.Column="0" Margin="4 0" Padding="8 0" Content="Add object by name..." Command="{Binding AddObjectCommand}" />
            <Button Grid.Column="1" Margin="2 0" Padding="8 0" Content="Add objects by criteria..." />

            <TextBox Grid.Column="2" HorizontalAlignment="Stretch" Text="{Binding FilterString, Mode=TwoWay, Delay=1000, UpdateSourceTrigger=PropertyChanged}" Margin="4" />
        </Grid>

        <controls:ExtendedDataGrid 
            Style="{StaticResource {x:Type DataGrid}}"
            Grid.Row="2"
            VerticalScrollBarVisibility="Auto"
            HorizontalScrollBarVisibility="Auto"
            EnableRowVirtualization="True"
            EnableColumnVirtualization="True"
            VirtualizingPanel.IsVirtualizingWhenGrouping="True"
            VirtualizingPanel.VirtualizationMode="Recycling"
            VirtualizingPanel.IsVirtualizing="True"
            AutoGenerateColumns="False"
            CanUserReorderColumns="True"
            CanUserSortColumns="True"
            CanUserResizeRows="False"
            ScrollViewer.IsDeferredScrollingEnabled="True"
            IsReadOnly="True"
            GridLinesVisibility="Vertical"
            BorderThickness="1"
            Margin="4"
            RowHeaderWidth="0"
            ColumnHeaderHeight="32"
            RowHeight="22"
            SelectionMode="Extended"
            SelectionUnit="FullRow"
            RowStyle="{StaticResource DefaultRowStyle}"
            ItemsSource="{Binding TableData, IsAsync=True}"
            IsSynchronizedWithCurrentItem="True"
            SelectedItem="{Binding SelectedTableItem}"
            SelectedItems="{Binding SelectedTableItems, Mode=OneWayToSource}">

            <DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding RemoveSelectedItemsCommand}" />
            </DataGrid.InputBindings>

            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Expander Header="{Binding Name}">
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Object" SortMemberPath="CelestialObject.Names[0]">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <Rectangle Margin="2" Width="16" Height="16" ToolTip="{Binding CelestialObject, Converter={views:CelestialObjectTypeDescriptionConverter}}">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{StaticResource ColorControlLightBackground}" />
                                    </Rectangle.Fill>
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="{Binding CelestialObject, Converter={s:CelestialObjectToIconConverter}}" Stretch="Uniform" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <TextBlock Padding="4 0 0 0" Text="{Binding CelestialObject, Converter={views:CelestialObjectNameConverter}}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Mag" Binding="{Binding Path='[Magnitude]', Converter={views:Converter}, ConverterParameter='Magnitude'}" SortMemberPath="[Magnitude]" />
                
                <DataGridTemplateColumn Header="Begin obs." CanUserSort="True" SortMemberPath="[Observation.Begin]">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Visibility="{Binding Path='[Observation.Begin]', Converter={views:TimeLinkVisibilityConverter}}" Style="{StaticResource DateLinkStyle}">
                                    <Hyperlink Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type views:PlanningListWindow}, Mode=FindAncestor}, Path=DataContext.SetTimeCommand}" CommandParameter="{Binding Path='[Observation.Begin]'}"><Run Text="{Binding Path='[Observation.Begin]', Mode=OneWay,  Converter={views:Converter}, ConverterParameter='Visibility.Begin'}" /></Hyperlink>
                                </TextBlock>
                                <TextBlock IsEnabled="False" Visibility="{Binding Path='[Observation.Begin]', Converter={views:TimeLinkInverseVisibilityConverter}}" Text="—" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="BEST Time" CanUserSort="True" SortMemberPath="[Observation.Best]">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Visibility="{Binding Path='[Observation.Best]', Converter={views:TimeLinkVisibilityConverter}}" Style="{StaticResource DateLinkStyle}">
                                    <Hyperlink Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type views:PlanningListWindow}, Mode=FindAncestor}, Path=DataContext.SetTimeCommand}" CommandParameter="{Binding Path='[Observation.Best]'}"><Run Text="{Binding Path='[Observation.Best]', Mode=OneWay,  Converter={views:Converter}, ConverterParameter='Visibility.Begin'}" /></Hyperlink>
                                </TextBlock>
                                <TextBlock IsEnabled="False" Visibility="{Binding Path='[Observation.Best]', Converter={views:TimeLinkInverseVisibilityConverter}}" Text="—" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="End obs." CanUserSort="True" SortMemberPath="[Observation.End]">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Visibility="{Binding Path='[Observation.End]', Converter={views:TimeLinkVisibilityConverter}}" Style="{StaticResource DateLinkStyle}">
                                    <Hyperlink Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type views:PlanningListWindow}, Mode=FindAncestor}, Path=DataContext.SetTimeCommand}" CommandParameter="{Binding Path='[Observation.End]'}"><Run Text="{Binding Path='[Observation.End]', Mode=OneWay,  Converter={views:Converter}, ConverterParameter='Visibility.End'}" /></Hyperlink>
                                </TextBlock>
                                <TextBlock IsEnabled="False" Visibility="{Binding Path='[Observation.End]', Converter={views:TimeLinkInverseVisibilityConverter}}" Text="—" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTextColumn Header="Obs. dur." Binding="{Binding Path='[Observation.Duration]', Converter={views:Converter}, ConverterParameter='Visibility.Duration'}" SortMemberPath="[Observation.Duration]" />

                <DataGridTextColumn Binding="{Binding Path='[Observation.BestAltitude]', Converter={views:Converter}, ConverterParameter='RTS.TransitAltitude'}" Header="BEST Alt." CanUserSort="True" SortMemberPath="[Observation.BestAltitude]" />
                <DataGridTextColumn Binding="{Binding Path='[Observation.BestAzimuth]', Converter={views:Converter}, ConverterParameter='RTS.RiseAzimuth'}" Header="BEST Azi." CanUserSort="True" SortMemberPath="[Observation.BestAzimuth]" />

                <DataGridTemplateColumn Header="Rise" CanUserSort="True" SortMemberPath="[RTS.Rise]">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Visibility="{Binding Path='[RTS.Rise]', Converter={views:TimeLinkVisibilityConverter}}" Style="{StaticResource DateLinkStyle}">
                                    <Hyperlink Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type views:PlanningListWindow}, Mode=FindAncestor}, Path=DataContext.SetTimeCommand}" CommandParameter="{Binding Path='[RTS.Rise]'}"><Run Text="{Binding Path='[RTS.Rise]', Mode=OneWay, Converter={views:Converter}, ConverterParameter='RTS.Rise'}" /></Hyperlink>
                                </TextBlock>
                                <TextBlock IsEnabled="False" Visibility="{Binding Path='[RTS.Rise]', Converter={views:TimeLinkInverseVisibilityConverter}}" Text="—" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Transit" CanUserSort="True" SortMemberPath="[RTS.Transit]">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Visibility="{Binding Path='[RTS.Transit]', Converter={views:TimeLinkVisibilityConverter}}" Style="{StaticResource DateLinkStyle}">
                                    <Hyperlink Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type views:PlanningListWindow}, Mode=FindAncestor}, Path=DataContext.SetTimeCommand}" CommandParameter="{Binding Path='[RTS.Transit]'}"><Run Text="{Binding Path='[RTS.Transit]', Mode=OneWay, Converter={views:Converter}, ConverterParameter='RTS.Transit'}" /></Hyperlink>
                                </TextBlock>
                                <TextBlock IsEnabled="False" Visibility="{Binding Path='[RTS.Transit]', Converter={views:TimeLinkInverseVisibilityConverter}}" Text="—" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Set" CanUserSort="True" SortMemberPath="[RTS.Set]">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Visibility="{Binding Path='[RTS.Set]', Converter={views:TimeLinkVisibilityConverter}}" Style="{StaticResource DateLinkStyle}">
                                    <Hyperlink Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type views:PlanningListWindow}, Mode=FindAncestor}, Path=DataContext.SetTimeCommand}" CommandParameter="{Binding Path='[RTS.Set]'}"><Run Text="{Binding Path='[RTS.Set]', Mode=OneWay, Converter={views:Converter}, ConverterParameter='RTS.Set'}" /></Hyperlink>
                                </TextBlock>
                                <TextBlock IsEnabled="False" Visibility="{Binding Path='[RTS.Set]', Converter={views:TimeLinkInverseVisibilityConverter}}" Text="—" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Binding="{Binding Path='[RTS.RiseAzimuth]', Converter={views:Converter}, ConverterParameter='RTS.RiseAzimuth'}" Header="Rise Azi." CanUserSort="True" SortMemberPath="[RTS.RiseAzimuth]" />
                <DataGridTextColumn Binding="{Binding Path='[RTS.TransitAltitude]', Converter={views:Converter}, ConverterParameter='RTS.TransitAltitude'}" Header="Trans. Alt." CanUserSort="True" SortMemberPath="[RTS.TransitAltitude]" />
                <DataGridTextColumn Binding="{Binding Path='[RTS.SetAzimuth]', Converter={views:Converter}, ConverterParameter='RTS.SetAzimuth'}" Header="Set Azi." CanUserSort="True" SortMemberPath="[RTS.SetAzimuth]" />
                <DataGridTextColumn Binding="{Binding Path='[Equatorial.Alpha]', Converter={views:Converter}, ConverterParameter='Equatorial.Alpha'}" Header="R.A." CanUserSort="True" SortMemberPath="[Equatorial.Alpha]" />
                <DataGridTextColumn Binding="{Binding Path='[Equatorial.Delta]', Converter={views:Converter}, ConverterParameter='Equatorial.Delta'}" Header="Dec." CanUserSort="True" SortMemberPath="[Equatorial.Delta]" />
                <DataGridTextColumn Binding="{Binding Path='[Constellation]', Converter={views:Converter}, ConverterParameter='Constellation'}" Header="Const." CanUserSort="True" SortMemberPath="[Constellation]" />

            </DataGrid.Columns>
            
        </controls:ExtendedDataGrid>

        <StatusBar Grid.Row="3" Margin="4 0" BorderThickness="1" Background="{StaticResource BrushControlDarkBackground}" BorderBrush="{StaticResource BrushControlDarkBackground}">
            <StatusBarItem >
                <StackPanel  IsEnabled="False" Orientation="Horizontal">
                    <TextBlock Text="Total objects: " />
                    <TextBlock Text="{Binding TotalItemsCount, FallbackValue=0}" />
                </StackPanel>
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <StackPanel IsEnabled="False" Orientation="Horizontal">
                    <TextBlock Text="Filtered: " />
                    <TextBlock Text="{Binding FilteredItemsCount, FallbackValue=0}" />
                </StackPanel>
            </StatusBarItem>
            
            <StatusBarItem HorizontalAlignment="Right" >
                <TextBlock  IsEnabled="False" Text="C:\Program Data\Astrarium\Plans\03_feb_2022.plan" />
            </StatusBarItem>
        </StatusBar>

        <!--<StackPanel Grid.Row="3"                    
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Button MinWidth="80" Width="Auto" Margin="4 0" Padding="8 2" Command="{Binding SaveToFileCommand}" Content="{t:Text SaveToFile}" />
            <Button MinWidth="80" Width="Auto" Margin="4 0 0 0" Padding="8 2" Command="{Binding CloseCommand}" Content="{t:Text Close}" />
        </StackPanel>-->

    </Grid>
</Window>
