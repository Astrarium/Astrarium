<ResourceDictionary 
    x:Class="Astrarium.Types.Themes.WindowStyle"    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:t="clr-namespace:Astrarium.Types.Themes"
    xmlns:c="clr-namespace:Astrarium.Types.Controls">

    <Style TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{StaticResource BrushWindowTitleForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushWindowTitleBackground}" />
        <Setter Property="Background" Value="{StaticResource BrushWindowBackground}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>

                        <!-- Thin border around window -->
                        <c:BorderFix
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <c:BorderFix.Style>
                                <Style TargetType="{x:Type c:BorderFix}" BasedOn="{StaticResource {x:Type c:BorderFix}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:WindowProperties.IsFullScreen)}" Value="true">
                                            <Setter Property="BorderThickness" Value="0" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:WindowProperties.IsFullScreen)}" Value="false">
                                            <Setter Property="BorderThickness" Value="1" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </c:BorderFix.Style>
                            
                            <!-- Window title and main content -->
                            <c:BorderFix
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                                <AdornerDecorator>
                                    <ContentPresenter />
                                </AdornerDecorator>
                                <c:BorderFix.Style>
                                    <Style TargetType="{x:Type c:BorderFix}" BasedOn="{StaticResource {x:Type c:BorderFix}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                                                <Setter Property="Margin" Value="5,0,5,5" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Normal">
                                                <Setter Property="Margin" Value="0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:WindowProperties.IsFullScreen)}" Value="true">
                                                <Setter Property="BorderThickness" Value="0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:WindowProperties.IsFullScreen)}" Value="false">
                                                <Setter Property="BorderThickness" Value="0,32,0,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </c:BorderFix.Style>
                            </c:BorderFix>
                        </c:BorderFix>

                        <Grid Height="32" VerticalAlignment="Top">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Menu Grid.Column="0" Width="30" Height="30" Background="Transparent" Visibility="{TemplateBinding t:WindowProperties.CompactMenuVisible}" WindowChrome.IsHitTestVisibleInChrome="True">
                                <MenuItem Background="Transparent" Width="28" Height="28" Margin="2" ItemsSource="{TemplateBinding t:WindowProperties.CompactMenu}">
                                    <MenuItem.Header>
                                        <Rectangle Width="16" Height="16" SnapsToDevicePixels="True">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="{DynamicResource ColorWindowTitleForeground}" />
                                            </Rectangle.Fill>
                                            <Rectangle.OpacityMask>
                                                <ImageBrush Stretch="Uniform">
                                                    <ImageBrush.ImageSource>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <DrawingGroup ClipGeometry="M0,0 V100 H100 V0 H0 Z">
                                                                    <GeometryDrawing Brush="White" Geometry="F1 M100,100z M0,0z M92.5,25L7.5,25C6.11928813,25,5,23.8807119,5,22.5L5,17.5C5,16.1192881,6.11928813,15,7.5,15L92.5,15C93.8807119,15,95,16.1192881,95,17.5L95,22.5C95,23.8807119,93.8807119,25,92.5,25z M95,52.5L95,47.5C95,46.1192881,93.8807119,45,92.5,45L7.5,45C6.11928813,45,5,46.1192881,5,47.5L5,52.5C5,53.8807119,6.11928813,55,7.5,55L92.5,55C93.8807119,55,95,53.8807119,95,52.5z M95,82.5L95,77.5C95,76.1192881,93.8807119,75,92.5,75L7.5,75C6.11928813,75,5,76.1192881,5,77.5L5,82.5C5,83.8807119,6.11928813,85,7.5,85L92.5,85C93.8807119,85,95,83.8807119,95,82.5z" />
                                                                </DrawingGroup>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </ImageBrush.ImageSource>
                                                </ImageBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </MenuItem.Header>
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                            <Setter Property="IsChecked" Value="{Binding IsChecked}" />
                                            <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                                            <Setter Property="Visibility" Value="{Binding IsVisible, Converter={t:BoolToVisibilityConverter}}" />
                                            <Setter Property="Header" Value="{Binding Header, Converter={t:LocalizedTextConverter}}" />
                                            <Setter Property="InputGestureText" Value="{Binding InputGestureText}" />
                                            <Setter Property="Command" Value="{Binding Command}" />
                                            <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                                            <Setter Property="ItemsSource" Value="{Binding SubItems}" />
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                </MenuItem>
                            </Menu>

                            <TextBlock Margin="8,0,0,0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       FontSize="16"
                                       Foreground="{TemplateBinding Foreground}"
                                       Text="{TemplateBinding Title}" 
                                       Grid.Column="1" />

                            <StackPanel Orientation="Horizontal" Grid.Column="2">
                                <Button x:Name="btnMinimize"
                                    Style="{StaticResource WindowTitleButton}"
                                    Margin="0, 0, 8, 0"
                                    Click="MinimizeClick"
                                    Visibility="{TemplateBinding t:WindowProperties.MinButtonVisible}"
                                    WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Grid>
                                        <Path HorizontalAlignment="Center" VerticalAlignment="Bottom" SnapsToDevicePixels="True" Width="10" Height="2" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 19,38L 57,38L 57,44L 19,44L 19,38 Z "/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnRestore"
                                    Style="{StaticResource WindowTitleButton}"
                                    Margin="0, 0, 8, 0"
                                    Click="MaximizeRestoreClick"
                                    Visibility="{TemplateBinding t:WindowProperties.MaxButtonVisible}"
                                    WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Grid>
                                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" Width="10" Height="10" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 54,54L 54,40L 33,40L 33,54L 54,54 Z M 57,34L 57,57L 30,57L 30,34L 57,34 Z M 43,25L 22,25L 22,39L 27,39L 27,42L 19,42L 19,19L 46,19L 46,31L 43,31L 43,25 Z "/>
                                    </Grid>
                                </Button>
                                <Button x:Name="btnClose"
                                    Style="{StaticResource WindowCloseTitleButton}"
                                    Margin="0, 0, 4, 0"
                                    Click="CloseClick"
                                    Visibility="{TemplateBinding t:WindowProperties.CloseButtonVisible}"
                                    WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Grid>
                                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" Width="10" Height="10" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "/>
                                    </Grid>
                                </Button>
                            </StackPanel>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:WindowProperties.IsFullScreen)}" Value="true">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:WindowProperties.IsFullScreen)}" Value="false">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(t:WindowProperties.IsFullScreen)}" Value="false">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CaptionHeight="30"
                              CornerRadius="0"
                              GlassFrameThickness="2"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="5"
                              UseAeroCaptionButtons="False" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(t:WindowProperties.IsFullScreen)}" Value="true">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CaptionHeight="0"
                              CornerRadius="0"
                              GlassFrameThickness="0"
                              NonClientFrameEdges="None"
                              ResizeBorderThickness="0"
                              UseAeroCaptionButtons="False" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>