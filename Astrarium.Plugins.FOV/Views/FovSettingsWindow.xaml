<?xml version="1.0" encoding="UTF-8"?>
<Window 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:c="clr-namespace:Astrarium.Types.Controls;assembly=Astrarium.Types" 
    xmlns:lc="clr-namespace:Astrarium.Plugins.FOV.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:Astrarium.Plugins.FOV" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:s="clr-namespace:Astrarium.Types.Themes;assembly=Astrarium.Types" 
    xmlns:t="clr-namespace:Astrarium.Types;assembly=Astrarium.Types" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    x:Class="Astrarium.Plugins.FOV.FovSettingsWindow" 
    mc:Ignorable="d" 
    Title="{t:Text FovSettingsWindow.Title}" 
    Height="500" 
    Width="700" 
    MinHeight="500" MinWidth="700" 
    Style="{StaticResource {x:Type Window}}" 
    WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="RadioTab" TargetType="{x:Type RadioButton}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="RadioButton">
                                <c:BorderFix BorderThickness="0.7 1 0.7 1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                    <ContentControl x:Name="Text" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                                </c:BorderFix>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="Border" Value="{StaticResource BrushControlBackground}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" TargetName="Text" Value="{StaticResource BrushControlLightBackground}" />
                                        <Setter Property="Cursor" Value="No" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsEnabled" Value="True" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Border" Value="{StaticResource BrushControlLightBackground}" />
                                        <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BrushControlLightBackground}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="6" />
                    <Setter Property="Foreground" Value="{StaticResource BrushForeground}" />
                    <Setter Property="Background" Value="{StaticResource BrushControlBackground}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource BrushControlBackground}" />
                    <Setter Property="Cursor" Value="Hand" />
                </Style.Setters>
            </Style>

            <Style x:Key="ImageButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                <Style.Setters>
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Style.Setters>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{StaticResource BrushControlBackground}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Grid x:Key="ImageAdd" x:Shared="False" >
                <Path HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" Width="10" Height="10" Stretch="Fill" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Foreground}" Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"/>
            </Grid>

            <Grid x:Key="ImageDelete" x:Shared="False" >
                <Path HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" Width="10" Height="10" Stretch="Fill" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Foreground}" Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "/>
            </Grid>

            <Grid x:Key="ImageEdit" x:Shared="False" >
                <Path HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" Width="10" Height="10" Stretch="Fill" Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Foreground}" Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z"/>
            </Grid>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid Margin="4" SnapsToDevicePixels="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical" Grid.Row="0" Grid.IsSharedSizeScope="True">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 4 0 16">
                <RadioButton IsChecked="{Binding FrameType, Converter={s:EqualityConverter}, ConverterParameter={x:Static local:FrameType.Telescope}}" Style="{StaticResource ResourceKey=RadioTab}">
                    <StackPanel Orientation="Horizontal" Margin="8 0">
                        <Image Width="16" Height="16" Stretch="Uniform" Margin="0 0 8 0">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing Brush="{StaticResource BrushForeground}" Geometry="M21.9,8.9L20.2,9.9L16.2,3L17.9,2L21.9,8.9M9.8,7.9L12.8,13.1L18.9,9.6L15.9,4.4L9.8,7.9M11.4,12.7L9.4,9.2L5.1,11.7L7.1,15.2L11.4,12.7M2.1,14.6L3.1,16.3L5.7,14.8L4.7,13.1L2.1,14.6M12.1,14L11.8,13.6L7.5,16.1L7.8,16.5C8,16.8 8.3,17.1 8.6,17.3L7,22H9L10.4,17.7H10.5L12,22H14L12.1,16.4C12.6,15.7 12.6,14.8 12.1,14Z" />
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                        <TextBlock Text="{t:Text FovSettingsWindow.FrameType.Telescope}" />
                    </StackPanel>
                </RadioButton>
                <RadioButton IsChecked="{Binding FrameType, Converter={s:EqualityConverter}, ConverterParameter={x:Static local:FrameType.Camera}}" Style="{StaticResource ResourceKey=RadioTab}">
                    <StackPanel Orientation="Horizontal" Margin="8 0">
                        <Image Width="16" Height="16" Stretch="Uniform" Margin="0 0 8 0">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing Brush="{StaticResource BrushForeground}" Geometry="M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z" />
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                        <TextBlock Text="{t:Text FovSettingsWindow.FrameType.Camera}" />
                    </StackPanel>
                </RadioButton>
                <RadioButton IsChecked="{Binding FrameType, Converter={s:EqualityConverter}, ConverterParameter={x:Static local:FrameType.Binocular}}" Style="{StaticResource ResourceKey=RadioTab}">
                    <StackPanel Orientation="Horizontal" Margin="8 0">
                        <Image Width="16" Height="16" Stretch="Uniform" Margin="0 0 8 0">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing Brush="{StaticResource BrushForeground}" Geometry="M11,6H13V13H11V6M9,20A1,1 0 0,1 8,21H5A1,1 0 0,1 4,20V15L6,6H10V13A1,1 0 0,1 9,14V20M10,5H7V3H10V5M15,20V14A1,1 0 0,1 14,13V6H18L20,15V20A1,1 0 0,1 19,21H16A1,1 0 0,1 15,20M14,5V3H17V5H14Z" />
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                        <TextBlock Text="{t:Text FovSettingsWindow.FrameType.Binocular}" />
                    </StackPanel>
                </RadioButton>
                <RadioButton IsChecked="{Binding FrameType, Converter={s:EqualityConverter}, ConverterParameter={x:Static local:FrameType.Finder}}" Style="{StaticResource ResourceKey=RadioTab}">
                    <StackPanel Orientation="Horizontal" Margin="8 0">
                        <Image Width="16" Height="16" Stretch="Uniform" Margin="0 0 8 0">
                            <Image.Source>
                                <DrawingImage xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                                    <DrawingImage.Drawing>
                                        <GeometryDrawing Brush="{StaticResource BrushForeground}" Geometry="M11,2V4.07C7.38,4.53 4.53,7.38 4.07,11H2V13H4.07C4.53,16.62 7.38,19.47 11,19.93V22H13V19.93C16.62,19.47 19.47,16.62 19.93,13H22V11H19.93C19.47,7.38 16.62,4.53 13,4.07V2M11,6.08V8H13V6.09C15.5,6.5 17.5,8.5 17.92,11H16V13H17.91C17.5,15.5 15.5,17.5 13,17.92V16H11V17.91C8.5,17.5 6.5,15.5 6.08,13H8V11H6.09C6.5,8.5 8.5,6.5 11,6.08M12,11A1,1 0 0,0 11,12A1,1 0 0,0 12,13A1,1 0 0,0 13,12A1,1 0 0,0 12,11Z" />
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                        <TextBlock Text="{t:Text FovSettingsWindow.FrameType.Finder}" />
                    </StackPanel>
                </RadioButton>
            </StackPanel>

            <!-- Frame Appearance -->
            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                        <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                    </Grid.ColumnDefinitions>
                    <Label Content="{t:Text FovSettingsWindow.Label}" Grid.Row="0" Grid.Column="0" />
                    <TextBox Margin="2" Text="{Binding Label}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="{Binding LabelColspan}" />
                    <Label Content="{t:Text FovSettingsWindow.Shading}" Visibility="{Binding ShadingVisible, Converter={s:BoolToVisibilityConverter}}" Grid.Row="0" Grid.Column="1" />
                    <c:NumericUpDown Margin="2" Value="{Binding Shading}" Visibility="{Binding ShadingVisible, Converter={s:BoolToVisibilityConverter}}" DecimalPlaces="0" Minimum="0" Maximum="100" Grid.Row="1" Grid.Column="1" />
                    <Label Content="{t:Text FovSettingsWindow.Color}" Grid.Row="0" Grid.Column="2" />
                    <c:ColorPicker Margin="5" SelectedColor="{Binding Color}" Grid.Row="1" Grid.Column="2" Caption="{Binding Color, Converter={s:ColorToStringConverter}}" />
                </Grid>
            </Grid>

            <Grid Margin="0 15 0 15">
                <StackPanel Orientation="Vertical">
                    
                    <!-- Telescope -->
                    <Grid Background="Transparent" Visibility="{Binding TelescopeVisible, Converter={s:BoolToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                        </Grid.ColumnDefinitions>

                        <DockPanel Grid.Row="0" Grid.Column="0">
                            <Label Content="{t:Text FovSettingsWindow.Telescope}" HorizontalAlignment="Left" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=IsMouseOver, Converter={s:BoolToVisibilityConverter}}">
                                <Button Content="{StaticResource ImageAdd}" Style="{StaticResource ImageButton}" Command="{Binding AddEquipmentCommand}" CommandParameter="{x:Type local:Telescope}" />
                                <Button Content="{StaticResource ImageEdit}" Style="{StaticResource ImageButton}" IsEnabled="{Binding Telescope, Converter={s:NotNullToBoolConverter}}" Command="{Binding EditEquipmentCommand}" CommandParameter="{x:Type local:Telescope}" />
                                <Button Content="{StaticResource ImageDelete}" Style="{StaticResource ImageButton}" IsEnabled="{Binding Telescope, Converter={s:NotNullToBoolConverter}}" Command="{Binding DeleteEquipmentCommand}" CommandParameter="{x:Type local:Telescope}" />
                            </StackPanel>
                        </DockPanel>

                        <lc:AutoCompleteComboBox Style="{StaticResource {x:Type ComboBox}}" Margin="2" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Telescopes}" SelectedValue="{Binding TelescopeId}" DisplayMemberPath="Name" SelectedValuePath="Id" TextSearch.TextPath="Name">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </lc:AutoCompleteComboBox>
                        <Label Grid.Row="0" Grid.Column="1" Content="{t:Text FovSettingsWindow.Telescope.FocalLength}" />
                        <TextBox Margin="2" IsReadOnly="True" Grid.Row="1" Grid.Column="1" Text="{Binding Telescope.FocalLength, Mode=OneWay, Converter={local:MillimetersConverter}}" />
                        <Label Grid.Row="0" Grid.Column="2" Content="{t:Text FovSettingsWindow.Telescope.Aperture}" />
                        <TextBox Margin="2" IsReadOnly="True" Grid.Row="1" Grid.Column="2" Text="{Binding Telescope.Aperture, Mode=OneWay, Converter={local:MillimetersConverter}}" />
                    </Grid>

                    <!-- Eyepiece -->
                    <Grid Background="Transparent" Visibility="{Binding EyepieceVisible, Converter={s:BoolToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                        </Grid.ColumnDefinitions>

                        <DockPanel Grid.Row="0" Grid.Column="0">
                            <Label Content="{t:Text FovSettingsWindow.Eyepiece}" HorizontalAlignment="Left" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=IsMouseOver, Converter={s:BoolToVisibilityConverter}}">
                                <Button Content="{StaticResource ImageAdd}" Style="{StaticResource ImageButton}" Command="{Binding AddEquipmentCommand}" CommandParameter="{x:Type local:Eyepiece}" />
                                <Button Content="{StaticResource ImageEdit}" Style="{StaticResource ImageButton}" IsEnabled="{Binding Eyepiece, Converter={s:NotNullToBoolConverter}}" Command="{Binding EditEquipmentCommand}" CommandParameter="{x:Type local:Eyepiece}" />
                                <Button Content="{StaticResource ImageDelete}" Style="{StaticResource ImageButton}" IsEnabled="{Binding Eyepiece, Converter={s:NotNullToBoolConverter}}" Command="{Binding DeleteEquipmentCommand}" CommandParameter="{x:Type local:Eyepiece}" />                            </StackPanel>
                        </DockPanel>

                        <lc:AutoCompleteComboBox Style="{StaticResource {x:Type ComboBox}}" Margin="2" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Eyepieces}" SelectedValue="{Binding EyepieceId}" DisplayMemberPath="Name" SelectedValuePath="Id" TextSearch.TextPath="Name">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </lc:AutoCompleteComboBox>
                        <Label Grid.Row="0" Grid.Column="1" Content="{t:Text FovSettingsWindow.Eyepiece.FocalLength}" />
                        <TextBox Margin="2" IsReadOnly="True" Grid.Row="1" Grid.Column="1" Text="{Binding Eyepiece.FocalLength, Mode=OneWay, Converter={local:MillimetersConverter}}" />
                        <Label Grid.Row="0" Grid.Column="2" Content="{t:Text FovSettingsWindow.Eyepiece.FieldOfView}" />
                        <TextBox Margin="2" IsReadOnly="True" Grid.Row="1" Grid.Column="2" Text="{Binding Eyepiece.FieldOfView, Mode=OneWay, Converter={local:FieldOfViewConverter}}" />
                    </Grid>

                    <!-- Camera -->
                    <Grid Background="Transparent" Visibility="{Binding CameraVisible, Converter={s:BoolToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                        </Grid.ColumnDefinitions>
                        
                        <DockPanel Grid.Row="0" Grid.Column="0">
                            <Label Content="{t:Text FovSettingsWindow.Camera}" HorizontalAlignment="Left" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=IsMouseOver, Converter={s:BoolToVisibilityConverter}}">
                                <Button Content="{StaticResource ImageAdd}" Style="{StaticResource ImageButton}" Command="{Binding AddEquipmentCommand}" CommandParameter="{x:Type local:Camera}" />
                                <Button Content="{StaticResource ImageEdit}" Style="{StaticResource ImageButton}" IsEnabled="{Binding Camera, Converter={s:NotNullToBoolConverter}}" Command="{Binding EditEquipmentCommand}" CommandParameter="{x:Type local:Camera}" />
                                <Button Content="{StaticResource ImageDelete}" Style="{StaticResource ImageButton}" IsEnabled="{Binding Camera, Converter={s:NotNullToBoolConverter}}" Command="{Binding DeleteEquipmentCommand}" CommandParameter="{x:Type local:Camera}" />                            
                            </StackPanel>
                        </DockPanel>

                        <lc:AutoCompleteComboBox Style="{StaticResource {x:Type ComboBox}}" Margin="2" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Cameras}" SelectedValue="{Binding CameraId}" DisplayMemberPath="Name" SelectedValuePath="Id" TextSearch.TextPath="Name">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </lc:AutoCompleteComboBox>
                        <Label Grid.Row="0" Grid.Column="1" Content="{t:Text FovSettingsWindow.Camera.Resolution}" />
                        <TextBox Margin="2" IsReadOnly="True" Grid.Row="1" Grid.Column="1" Text="{Binding Camera, Mode=OneWay, Converter={local:CameraResolutionConverter}}" />
                        <Label Grid.Row="0" Grid.Column="2" Content="{t:Text FovSettingsWindow.Camera.PixelSize}" />
                        <TextBox Margin="2" IsReadOnly="True" Grid.Row="1" Grid.Column="2" Text="{Binding Camera, Mode=OneWay, Converter={local:CameraPixelSizeConverter}}" />
                    </Grid>
                    
                    <!-- Binocular -->
                    <Grid Background="Transparent" Visibility="{Binding BinocularVisible, Converter={s:BoolToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g2" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g2" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g2" />
                        </Grid.ColumnDefinitions>
                        
                        <DockPanel Grid.Row="0" Grid.Column="0">
                            <Label Content="{t:Text FovSettingsWindow.Binocular}" HorizontalAlignment="Left" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=IsMouseOver, Converter={s:BoolToVisibilityConverter}}">
                                <Button Content="{StaticResource ImageAdd}" Style="{StaticResource ImageButton}" Command="{Binding AddEquipmentCommand}" CommandParameter="{x:Type local:Binocular}" />
                                <Button Content="{StaticResource ImageEdit}" Style="{StaticResource ImageButton}" IsEnabled="{Binding Binocular, Converter={s:NotNullToBoolConverter}}" Command="{Binding EditEquipmentCommand}" CommandParameter="{x:Type local:Binocular}" />
                                <Button Content="{StaticResource ImageDelete}" Style="{StaticResource ImageButton}" IsEnabled="{Binding Binocular, Converter={s:NotNullToBoolConverter}}" Command="{Binding DeleteEquipmentCommand}" CommandParameter="{x:Type local:Binocular}" />
                            </StackPanel>
                        </DockPanel>

                        <lc:AutoCompleteComboBox Style="{StaticResource {x:Type ComboBox}}" Margin="2" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Binoculars}" SelectedValue="{Binding BinocularId}" DisplayMemberPath="Name" SelectedValuePath="Id" TextSearch.TextPath="Name">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </lc:AutoCompleteComboBox>
                        <Label Grid.Row="0" Grid.Column="1" Content="{t:Text FovSettingsWindow.Binocular.Aperture}" />
                        <TextBox Margin="2" IsReadOnly="True" Grid.Row="1" Grid.Column="1" Text="{Binding Binocular.Aperture, Mode=OneWay, Converter={local:MillimetersConverter}}" />
                        <Label Grid.Row="0" Grid.Column="2" Content="{t:Text FovSettingsWindow.Binocular.Magnification}" />
                        <TextBox Margin="2" IsReadOnly="True" Grid.Row="1" Grid.Column="2" Text="{Binding Binocular.Magnification, Mode=OneWay, Converter={local:MagnificationConverter}}" />
                        <Label Grid.Row="0" Grid.Column="3" Content="{t:Text FovSettingsWindow.Binocular.FieldOfView}" />
                        <TextBox Margin="2" IsReadOnly="True" Grid.Row="1" Grid.Column="3" Text="{Binding Binocular.FieldOfView, Mode=OneWay, Converter={local:FieldOfViewConverter}}" />
                    </Grid>

                    <!-- Lens -->
                    <Grid Visibility="{Binding LensVisible, Converter={s:BoolToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                            <ColumnDefinition Width="Auto" MinWidth="120" SharedSizeGroup="g1" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="{t:Text FovSettingsWindow.Lens}" />
                        <lc:AutoCompleteComboBox Style="{StaticResource {x:Type ComboBox}}" Margin="2" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Lenses}" SelectedValue="{Binding LensId}" DisplayMemberPath="Name" SelectedValuePath="Id" TextSearch.TextPath="Name">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </lc:AutoCompleteComboBox>
                        <Label Grid.Row="0" Grid.Column="1" Content="{t:Text FovSettingsWindow.Camera.Binning}" Visibility="{Binding CameraVisible, Converter={s:BoolToVisibilityConverter}}" />
                        <ComboBox Margin="2" Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Binnings}" SelectedValue="{Binding Binning}" Visibility="{Binding CameraVisible, Converter={s:BoolToVisibilityConverter}}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={local:BinningConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>

                        <Label Content="{t:Text FovSettingsWindow.Camera.Rotation}" Grid.Row="0" Grid.Column="2" Visibility="{Binding CameraVisible, Converter={s:BoolToVisibilityConverter}}" />

                        <Grid Visibility="{Binding CameraVisible, Converter={s:BoolToVisibilityConverter}}" Grid.Row="1" Grid.Column="2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <c:NumericUpDown Grid.Column="0" Value="{Binding Rotation}" Margin="2" DecimalPlaces="0" Minimum="0" Maximum="359"  />
                            <TextBlock Grid.Column="1" Text="°" Margin="0 0 4 0" />
                            <ComboBox Grid.Column="2" SelectedValuePath="Tag" SelectedValue="{Binding RotateOrigin}" IsEditable="False">
                                <ComboBoxItem Content="{t:Text FovSettingsWindow.RotateOrigin.Equatorial}" Tag="{x:Static local:FovFrameRotateOrigin.Equatorial}"/>
                                <ComboBoxItem Content="{t:Text FovSettingsWindow.RotateOrigin.Horizontal}" Tag="{x:Static local:FovFrameRotateOrigin.Horizontal}"/>
                            </ComboBox>
                        </Grid>

                    </Grid>

                    <!-- Finder -->
                    <GroupBox Header="{t:Text FovSettingsWindow.FinderParameters}" Visibility="{Binding FinderVisible, Converter={s:BoolToVisibilityConverter}}" Margin="2 8 2 8">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Margin="8" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Text="{t:Text FovSettingsWindow.Finder.Size1}" />
                            <c:NumericUpDown VerticalAlignment="Center" Width="50" Grid.Row="0" Grid.Column="1" Step="0.1" Value="{Binding FinderSize1}" Minimum="0" Maximum="90" DecimalPlaces="1" />

                            <CheckBox IsChecked="{Binding FinderSize2Enabled}" Margin="8" VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" Content="{t:Text FovSettingsWindow.Finder.Size2}" />
                            <c:NumericUpDown IsEnabled="{Binding FinderSize2Enabled}" VerticalAlignment="Center" Width="50" Grid.Row="1" Grid.Column="1" Step="0.1" Value="{Binding FinderSize2}" Minimum="0" Maximum="90" DecimalPlaces="1" />

                            <CheckBox IsEnabled="{Binding FinderSize2Enabled}" IsChecked="{Binding FinderSize3Enabled}" Margin="8" VerticalAlignment="Center" Grid.Row="2" Grid.Column="0" Content="{t:Text FovSettingsWindow.Finder.Size3}" />
                            <c:NumericUpDown VerticalAlignment="Center" Width="50" Grid.Row="2" Grid.Column="1" Step="0.1" Value="{Binding FinderSize3}" Minimum="0" Maximum="90" DecimalPlaces="1">
                                <c:NumericUpDown.IsEnabled>
                                    <MultiBinding Converter="{s:BooleanAndConverter}">
                                        <Binding Path="FinderSize3Enabled" />
                                        <Binding Path="FinderSize2Enabled" />
                                    </MultiBinding>
                                </c:NumericUpDown.IsEnabled>
                            </c:NumericUpDown>
                            <CheckBox Margin="8" VerticalAlignment="Center" Grid.Row="3" Grid.ColumnSpan="2" IsChecked="{Binding FinderCrosslines}" Content="{t:Text FovSettingsWindow.Finder.Crosslines}" />
                        </Grid>
                    </GroupBox>

                </StackPanel>
            </Grid>
            
            <!--
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <CheckBox Margin="2" Grid.Column="0" Content="Min Zoom" />
                <c:NumericUpDown Margin="2"  Grid.Column="0" Grid.Row="1" />

                <CheckBox Margin="2" Grid.Column="1" Content="Max Zoom" />
                <c:NumericUpDown Margin="2" Grid.Column="1" Grid.Row="1" />
            </Grid>
            -->

            <!-- Details -->
            <GroupBox Header="{t:Text FovSettingsWindow.Details}" Visibility="{Binding FinderVisible, Converter={s:InverseBoolToVisibilityConverter}}" Margin="2 8 2 8">
                <Grid>
                    <TextBlock Margin="2 8 2 8" TextWrapping="Wrap" Text="{Binding FieldOfView, Mode=OneWay, Converter={local:FieldOfViewDetailsConverter}}" Visibility="{Binding FieldOfView, Converter={s:NotNullToVisibilityConverter}}" />
                    <TextBlock Margin="2 8 2 8" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="False" Text="{t:Text FovSettingsWindow.Details.Empty}" Visibility="{Binding FieldOfView, Converter={s:NullToVisibilityConverter}}" />
                </Grid>
            </GroupBox>

        </StackPanel>
        <Separator Grid.Row="1" Margin="0 4 0 4" />
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button MinWidth="80" Width="Auto" Margin="4 0 0 0" Padding="8 2" Command="{Binding OkCommand}" Content="{t:Text OK}" IsEnabled="{Binding FieldOfView, Converter={s:NotNullToBoolConverter}}" />
            <Button MinWidth="80" Width="Auto" Margin="4 0 0 0" Padding="8 2" Command="{Binding CancelCommand}" Content="{t:Text Cancel}" />
        </StackPanel>
    </Grid>
</Window>